<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Percona Community</title><link>https://percona.community/authors/elizaveta_dokshina/</link><description>Recent content on Percona Community</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© Percona Community. MySQL, InnoDB, MariaDB and MongoDB are trademarks of their respective owners.</copyright><lastBuildDate>Wed, 01 Apr 2020 11:04:45 +0000</lastBuildDate><atom:link href="https://percona.community/authors/elizaveta_dokshina/index.xml" rel="self" type="application/rss+xml"/><item><title>Deploying Tarantool Cartridge Applications with Zero Effort (Part 2)</title><link>https://percona.community/blog/2020-04-01-deploying-tarantool-cartridge-applications-with-zero-effort-part-2/</link><pubDate>Wed, 01 Apr 2020 11:04:45 +0000</pubDate><guid>https://percona.community/blog/2020-04-01-deploying-tarantool-cartridge-applications-with-zero-effort-part-2/</guid><description>We have recently talked about how to deploy a Tarantool Cartridge application. However, an application&amp;rsquo;s life doesn&amp;rsquo;t end with deployment, so today we will update our application and figure out how to manage topology, sharding, and authorization, and change the role configuration.
Feeling interested? Please continue reading under the cut.
Where did we leave off? Last time, we set up the following topology: The sample repository has changed a bit: there are new files called getting-started-app-2.</description></item><item><title>Deploying Tarantool Cartridge Applications with Zero Effort (Part 1)</title><link>https://percona.community/blog/2020-03-24-deploying-tarantool-cartridge-applications-with-zero-effort-part-1/</link><pubDate>Tue, 24 Mar 2020 14:04:32 +0000</pubDate><guid>https://percona.community/blog/2020-03-24-deploying-tarantool-cartridge-applications-with-zero-effort-part-1/</guid><description>Tarantool is an open-source in-memory DB with a Lua application server on board. It&amp;rsquo;s best used for apps that require high performance and horizontal scaling. Out of the box we support horizontal scaling via the vshard module. There are quite a few things that you have to keep in mind when you work on your business logic, though. Not ideal.
We made it easier. All the lessons learned from creating distributed apps resulted in a framework called Tarantool Cartridge.</description></item></channel></rss>