<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Percona Community</title><link>https://percona.community/authors/jeff_gagne/</link><description>Recent content on Percona Community</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© Percona Community. MySQL, InnoDB, MariaDB and MongoDB are trademarks of their respective owners.</copyright><lastBuildDate>Mon, 29 Jul 2019 11:50:51 +0000</lastBuildDate><atom:link href="https://percona.community/authors/jeff_gagne/index.xml" rel="self" type="application/rss+xml"/><item><title>MySQL Optimizer: Naughty Aberrations on Queries Combining WHERE, ORDER BY and LIMIT</title><link>https://percona.community/blog/2019-07-29-mysql-optimizer-naughty-aberrations-on-queries-combining-where-order-by-and-limit/</link><pubDate>Mon, 29 Jul 2019 11:50:51 +0000</pubDate><guid>https://percona.community/blog/2019-07-29-mysql-optimizer-naughty-aberrations-on-queries-combining-where-order-by-and-limit/</guid><description>Sometimes, the MySQL Optimizer chooses a wrong plan, and a query that should execute in less than 0.1 second ends-up running for 12 minutes! This is not a new problem: bugs about this can be traced back to 2014, and a blog post on this subject was published in 2015. But even if this is old news, because this problem recently came yet again to my attention, and because this is still not fixed in MySQL 5.</description></item><item><title>Question about Semi-Synchronous Replication: the Answer with All the Details</title><link>https://percona.community/blog/2018-08-23-question-about-semi-synchronous-replication-answer-with-all-the-details/</link><pubDate>Thu, 23 Aug 2018 12:49:59 +0000</pubDate><guid>https://percona.community/blog/2018-08-23-question-about-semi-synchronous-replication-answer-with-all-the-details/</guid><description>I was recently asked a question by mail about MySQL Lossless Semi-Synchronous Replication. As I think the answer could benefit many people, I am answering it in a blog post. The answer brings us to the internals of transaction committing, of semi-synchronous replication, of MySQL (server) crash recovery, and of storage engine (InnoDB) crash recovery. I am also debunking some misconceptions that I have often seen and heard repeated by many.</description></item><item><title>A Nice Feature in MariaDB 10.3: no InnoDB Buffer Pool in Core Dumps</title><link>https://percona.community/blog/2018-06-28-nice-feature-in-mariadb-103-no-innodb-buffer-pool-in-coredumps/</link><pubDate>Thu, 28 Jun 2018 12:28:58 +0000</pubDate><guid>https://percona.community/blog/2018-06-28-nice-feature-in-mariadb-103-no-innodb-buffer-pool-in-coredumps/</guid><description>MariaDB 10.3 is now generally available (10.3.7 was released GA on 2018-05-25). The article What&amp;rsquo;s New in MariaDB Server 10.3 by the MariaDB Corporation lists three key improvements in 10.3: temporal data processing, Oracle compatibility features, and purpose-built storage engines. Even if I am excited about MyRocks and curious on Spider, I am also very interested in less flashy but still very important changes that make running the database in production easier.</description></item></channel></rss>