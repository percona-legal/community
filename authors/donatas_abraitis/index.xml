<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Percona Community</title><link>https://percona.community/authors/donatas_abraitis/</link><description>Recent content on Percona Community</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© Percona Community. MySQL, InnoDB, MariaDB and MongoDB are trademarks of their respective owners.</copyright><lastBuildDate>Tue, 11 Dec 2018 15:27:45 +0000</lastBuildDate><atom:link href="https://percona.community/authors/donatas_abraitis/index.xml" rel="self" type="application/rss+xml"/><item><title>MySQL Setup at Hostinger Explained</title><link>https://percona.community/blog/2018-12-11-mysql-setup-hostinger-explained/</link><pubDate>Tue, 11 Dec 2018 15:27:45 +0000</pubDate><guid>https://percona.community/blog/2018-12-11-mysql-setup-hostinger-explained/</guid><description>Ever wondered how hosting companies manage their MySQL database architecture? At Hostinger, we have various MySQL setups starting from the standalone replica-less instances to Percona XtraDB Cluster (later just PXC), ProxySQL routing-based and even absolutely custom and unique solutions which I’m going to describe in this blog post.
We do not have elephant-sized databases for internal services like API, billing, and clients. Thus almost every decision ends up with high availability as a top priority instead of scalability.</description></item></channel></rss>