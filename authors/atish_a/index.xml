<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Percona Community</title><link>https://percona.community/authors/atish_a/</link><description>Recent content on Percona Community</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© Percona Community. MySQL, InnoDB, MariaDB and MongoDB are trademarks of their respective owners.</copyright><lastBuildDate>Wed, 29 Aug 2018 10:23:20 +0000</lastBuildDate><atom:link href="https://percona.community/authors/atish_a/index.xml" rel="self" type="application/rss+xml"/><item><title>7 Checks to Successfully Upgrade MongoDB Replica Set in Production</title><link>https://percona.community/blog/2018-08-29-7-checks-successfully-upgrade-mongodb-replica-set-production/</link><pubDate>Wed, 29 Aug 2018 10:23:20 +0000</pubDate><guid>https://percona.community/blog/2018-08-29-7-checks-successfully-upgrade-mongodb-replica-set-production/</guid><description>MongoDB ships powerful features in each release. The new release brings new features while revisions add bug fixes, security patches or improvements to existing features. To bring most out these releases to your plate you should always consider upgrading your MongoDB deployments.
Planning your database upgrade can avoid the nightmares caused due to database-upgrade-gone-wrong or avoid not-so-simple rollbacks in your production database. Grab a cup of coffee and sit back.</description></item></channel></rss>