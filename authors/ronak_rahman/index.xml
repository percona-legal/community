<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Percona Community</title><link>https://percona.community/authors/ronak_rahman/</link><description>Recent content on Percona Community</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© Percona Community. MySQL, InnoDB, MariaDB and MongoDB are trademarks of their respective owners.</copyright><lastBuildDate>Mon, 26 Oct 2020 14:14:50 +0000</lastBuildDate><atom:link href="https://percona.community/authors/ronak_rahman/index.xml" rel="self" type="application/rss+xml"/><item><title>Zero downtime schema change with Liquibase &amp; Percona</title><link>https://percona.community/blog/2020-10-26-zero-downtime-schema-change-with-liquibase-percona/</link><pubDate>Mon, 26 Oct 2020 14:14:50 +0000</pubDate><guid>https://percona.community/blog/2020-10-26-zero-downtime-schema-change-with-liquibase-percona/</guid><description>I am always surprised to learn something new whenever I talk to a member of the open-source community. No matter how much I think I have heard of every use case there is for Liquibase (and database change management in general), I always hear something that makes this space still feel new. There’s always something left to discover.
Today, that new something is the problem of how to perform large batches of changes with SQL ALTER TABLE statements.</description></item><item><title>Database Schema Management Via Liquibase</title><link>https://percona.community/blog/2020-10-01-database-schema-management-via-liquibase/</link><pubDate>Thu, 01 Oct 2020 22:30:04 +0000</pubDate><guid>https://percona.community/blog/2020-10-01-database-schema-management-via-liquibase/</guid><description>Creating the database for an application is simple and easy. However, database script management gets complicated in a hurry when you need to support multiple versions, work with multiple teams, and apply the same changes to multiple types of databases. One open-source tool that helps teams track, version, and deploy database schema changes is Liquibase. It executes database scripts sequentially, allows for the automatic creation and execution of rollback scripts for failed updates, and provides an easy way to use the same scripts and apply them to different types of databases.</description></item></channel></rss>