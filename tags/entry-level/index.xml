<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Entry Level on Percona Community</title><link>https://percona.community/tags/entry-level/</link><description>Recent content in Entry Level on Percona Community</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© Percona Community. MySQL, InnoDB, MariaDB and MongoDB are trademarks of their respective owners.</copyright><lastBuildDate>Tue, 06 Oct 2020 01:08:04 +0000</lastBuildDate><atom:link href="https://percona.community/tags/entry-level/index.xml" rel="self" type="application/rss+xml"/><item><title>NoSQL Endgame – Percona Live ONLINE Talk Preview</title><link>https://percona.community/blog/2020-10-06-nosql-endgame-percona-live-online-talk-preview/</link><pubDate>Tue, 06 Oct 2020 01:08:04 +0000</pubDate><guid>https://percona.community/blog/2020-10-06-nosql-endgame-percona-live-online-talk-preview/</guid><description>Percona Live Online Agenda Slot: Tue 20 Oct • New York 3:00 p.m. • London 8:00 p.m. • New Delhi 12:30 a.m. (next day) • Singapore 3:00 a.m.
Abstract The amount of data collected by applications nowadays is growing at a scary pace. Many of them need to handle billions of users generating and consuming data at an incredible speed. Maybe you are wondering how to create an application like this?</description></item><item><title>Google Summer of Code Refactor PMM Framework Project with Percona</title><link>https://percona.community/blog/2020-09-07-google-summer-of-code-refactor-pmm-framework-project-with-percona/</link><pubDate>Mon, 07 Sep 2020 11:08:19 +0000</pubDate><guid>https://percona.community/blog/2020-09-07-google-summer-of-code-refactor-pmm-framework-project-with-percona/</guid><description>I am Meet Patel, 2nd year undergraduate at DAIICT, Gandhinagar, India; pursuing a bachelor’s degree in Information and Communication Technology with a minor in Computational Science.
I am proud to be selected for the Google Summer of Code program under an open source organization as big and impactful as Percona. As we head towards the end of this amazing program, I’ll try to share a general overview of what and how all of it has been implemented.</description></item><item><title>How to contribute Dashboards to PMM</title><link>https://percona.community/blog/2020-05-03-how-to-contribute-dashboards-to-pmm/</link><pubDate>Mon, 04 May 2020 14:54:56 +0000</pubDate><guid>https://percona.community/blog/2020-05-03-how-to-contribute-dashboards-to-pmm/</guid><description>Have you already contributed to Percona’s open-source products or perhaps you wanted to try doing so?
I will tell you how to become a contributor to the popular open-source product from Percona in just a few hours. You don&amp;rsquo;t need any serious developer skills.
We earlier explained how to contribute to PMM documentation in our last post. Now we will contribute to PMM itself, namely to Dashboards. Dashboards are an important part of PMM, they are seen and used by thousands of users, so your contribution may be of benefit to many others.</description></item><item><title>An Introduction To MongoDB Replication</title><link>https://percona.community/blog/2019-01-14-introduction-mongodb-replication/</link><pubDate>Mon, 14 Jan 2019 11:21:27 +0000</pubDate><guid>https://percona.community/blog/2019-01-14-introduction-mongodb-replication/</guid><description>MongoDB® is database software that stores data in the same format as JSON. The data structure of the database can be changed when required. The performance of the database is good and developers can easily use to it to connect their code to the database.
The database, MongoDB is platform independent and runs in the same way on all platforms. It is an open source database and is based on a document-oriented database model.</description></item><item><title>Writing a Killer Conference Proposal</title><link>https://percona.community/blog/2019-01-03-writing-killer-conference-proposal/</link><pubDate>Thu, 03 Jan 2019 10:40:41 +0000</pubDate><guid>https://percona.community/blog/2019-01-03-writing-killer-conference-proposal/</guid><description>If you&amp;rsquo;re planning to submit a proposal to Percona Live but suffering a little writer’s block, or at least want to be sure to make a good impression on our track selectors, there’s some great content online that can help. If you’re an old hand, you probably won’t need this, though it’s possible you’ll find some interesting stuff here nevertheless.
Your job is to make it easy for the selectors to choose your talk.</description></item><item><title>Export to JSON from MySQL All Ready for MongoDB</title><link>https://percona.community/blog/2018-10-16-export-to-json-from-mysql-all-ready-for-mongodb/</link><pubDate>Tue, 16 Oct 2018 15:18:36 +0000</pubDate><guid>https://percona.community/blog/2018-10-16-export-to-json-from-mysql-all-ready-for-mongodb/</guid><description>This post walks through how to export data from MySQL® into JSON format, ready to ingest into MongoDB®. Starting from MySQL 5.7+, there is native support for JSON. MySQL provides functions that actually create JSON values, so I will be using these functions in this article to export to JSON from MySQL:
JSON_OBJECT JSON_ARRAY These functions make it easy to convert MySQL data to JSON e.g.
mysql&amp;gt; SELECT json_object(&amp;#39;employee_id&amp;#39;, emp_no, &amp;#39;first_name&amp;#39;, first_name ) AS &amp;#39;JSON&amp;#39; FROM employees LIMIT 2; +------------------------------------------------+ | JSON | +------------------------------------------------+ | {&amp;#34;first_name&amp;#34;: &amp;#34;Aamer&amp;#34;, &amp;#34;employee_id&amp;#34;: 444117} | | {&amp;#34;first_name&amp;#34;: &amp;#34;Aamer&amp;#34;, &amp;#34;employee_id&amp;#34;: 409151} | +------------------------------------------------+ 2 rows in set (0.</description></item><item><title>Generating Identifiers – from AUTO_INCREMENT to Sequence</title><link>https://percona.community/blog/2018-10-12-generating-identifiers-auto_increment-sequence/</link><pubDate>Fri, 12 Oct 2018 11:00:58 +0000</pubDate><guid>https://percona.community/blog/2018-10-12-generating-identifiers-auto_increment-sequence/</guid><description>There are a number of options for generating ID values for your tables. In this post, Alexey Mikotkin of Devart explores your choices for generating identifiers with a look at auto_increment, triggers, UUID and sequences.
AUTO_INCREMENT Frequently, we happen to need to fill tables with unique identifiers. Naturally, the first example of such identifiers is PRIMARY KEY data. These are usually integer values hidden from the user since their specific values are unimportant.</description></item><item><title>Minimize MySQL Deadlocks with 3 Steps</title><link>https://percona.community/blog/2018-09-24-minimize-mysql-deadlocks-3-steps/</link><pubDate>Mon, 24 Sep 2018 10:49:35 +0000</pubDate><guid>https://percona.community/blog/2018-09-24-minimize-mysql-deadlocks-3-steps/</guid><description>MySQL has locking capabilities, for example table and row level locking, and such locks are needed to control data integrity in multi-user concurrency. Deadlocks—where two or more transactions are waiting for one another to give up locks before the transactions can proceed successfully—are an unwanted situation. It is a classic problem for all databases including MySQL/PostgreSQL/Oracle etc. By default, MySQL detects the deadlock condition and to break the deadlock it rolls back one of the transactions.</description></item></channel></rss>