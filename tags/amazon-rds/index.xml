<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Amazon RDS on Percona Community</title><link>https://percona.community/tags/amazon-rds/</link><description>Recent content in Amazon RDS on Percona Community</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© Percona Community. MySQL, InnoDB, MariaDB and MongoDB are trademarks of their respective owners.</copyright><lastBuildDate>Thu, 11 Jun 2020 14:21:08 +0000</lastBuildDate><atom:link href="https://percona.community/tags/amazon-rds/index.xml" rel="self" type="application/rss+xml"/><item><title>Percona Live ONLINE: Anti-cheating tools for massive multiplayer games using Amazon Aurora and Amazon ML services</title><link>https://percona.community/blog/2020-06-11-percona-live-online-anti-cheating-tools-for-massive-multiplayer-games-using-amazon-aurora-and-amazon-ml-services/</link><pubDate>Thu, 11 Jun 2020 14:21:08 +0000</pubDate><guid>https://percona.community/blog/2020-06-11-percona-live-online-anti-cheating-tools-for-massive-multiplayer-games-using-amazon-aurora-and-amazon-ml-services/</guid><description>Would you play a multiplayer game if you discovered other people are cheating? According to a survey by Irdeto, 60% of online games were negatively impacted by cheaters, and 77% of players said they would stop playing a multiplayer game if they think opponents are cheating. Player churn grows as cheating grows.
Stopping this is therefore essential if you want to build and develop your community, which is essential to success for today’s gaming companies.</description></item><item><title>A First Look at Amazon RDS Proxy</title><link>https://percona.community/blog/2020-01-07-a-first-look-at-amazon-rds-proxy/</link><pubDate>Tue, 07 Jan 2020 11:45:40 +0000</pubDate><guid>https://percona.community/blog/2020-01-07-a-first-look-at-amazon-rds-proxy/</guid><description>At re:Invent in Las Vegas in December 2019, AWS announced the public preview of RDS Proxy, a fully managed database proxy that sits between your application and RDS. The new service offers to &amp;ldquo;share established database connections, improving database efficiency and application scalability&amp;rdquo;.
But one of the benefits that caught my eye is the ability to reduce the downtime in case of an instance failure and a failover. As for the announcement:</description></item><item><title>How to Automate Minor Version Upgrades for MySQL on RDS</title><link>https://percona.community/blog/2018-07-10-automate-minor-version-upgrades-mysql-rds/</link><pubDate>Tue, 10 Jul 2018 12:19:11 +0000</pubDate><guid>https://percona.community/blog/2018-07-10-automate-minor-version-upgrades-mysql-rds/</guid><description>Amazon RDS for MySQL offers the option to automate minor version upgrades using the minor version upgrade policy, a property that lets you decide if Amazon is allowed to perform the upgrades on your behalf. Usually the goal is not to upgrade automatically every RDS instance but to keep up to date automatically non-production deployments. This helps you address engine issues as soon as possible and improve the automation of the deployment process.</description></item><item><title>Enabling KMS encryption for a running Amazon RDS instance</title><link>https://percona.community/blog/2018-06-08-enabling-kms-encryption-running-amazon-rds-instance/</link><pubDate>Fri, 08 Jun 2018 11:40:02 +0000</pubDate><guid>https://percona.community/blog/2018-06-08-enabling-kms-encryption-running-amazon-rds-instance/</guid><description>Since summer 2017, Amazon RDS supports encryption at rest using AWS Key Management Service (KMS) for db.t2.small and db.t2.medium database instances, making the feature now available to virtually every instance class and type.
Unless you are running Previous Generation DB Instances or you can only afford to run a db.t2.micro, every other instance class now supports native encryption at rest using KMS. As for the Amazon documentation:
Encryption on smaller T2 database instances is useful for development and test use cases, where you want the environment to have identical security characteristics as the planned production environment.</description></item></channel></rss>