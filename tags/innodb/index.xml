<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>InnoDB on Percona Community</title><link>https://percona.community/tags/innodb/</link><description>Recent content in InnoDB on Percona Community</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© Percona Community. MySQL, InnoDB, MariaDB and MongoDB are trademarks of their respective owners.</copyright><lastBuildDate>Fri, 20 Sep 2019 15:32:00 +0000</lastBuildDate><atom:link href="https://percona.community/tags/innodb/index.xml" rel="self" type="application/rss+xml"/><item><title>Are your Database Backups Good Enough?</title><link>https://percona.community/blog/2019-09-20-are-your-database-backups-good-enough/</link><pubDate>Fri, 20 Sep 2019 15:32:00 +0000</pubDate><guid>https://percona.community/blog/2019-09-20-are-your-database-backups-good-enough/</guid><description>In the last few years there have been several examples of major service problems affecting businesses data: outages causing data inconsistencies; unavailability or data loss, and worldwide cyberattacks encrypting your files and asking for a ransom.
Database-related incidents are a very common industry issue- even if the root cause is not the database system itself. No matter if your main relational system is MySQL, MariaDB, PostgresQL or AWS Aurora -there will be a time where you will need to make use of backups to recover to a previous state.</description></item><item><title>Question about Semi-Synchronous Replication: the Answer with All the Details</title><link>https://percona.community/blog/2018-08-23-question-about-semi-synchronous-replication-answer-with-all-the-details/</link><pubDate>Thu, 23 Aug 2018 12:49:59 +0000</pubDate><guid>https://percona.community/blog/2018-08-23-question-about-semi-synchronous-replication-answer-with-all-the-details/</guid><description>I was recently asked a question by mail about MySQL Lossless Semi-Synchronous Replication. As I think the answer could benefit many people, I am answering it in a blog post. The answer brings us to the internals of transaction committing, of semi-synchronous replication, of MySQL (server) crash recovery, and of storage engine (InnoDB) crash recovery. I am also debunking some misconceptions that I have often seen and heard repeated by many.</description></item><item><title>A Nice Feature in MariaDB 10.3: no InnoDB Buffer Pool in Core Dumps</title><link>https://percona.community/blog/2018-06-28-nice-feature-in-mariadb-103-no-innodb-buffer-pool-in-coredumps/</link><pubDate>Thu, 28 Jun 2018 12:28:58 +0000</pubDate><guid>https://percona.community/blog/2018-06-28-nice-feature-in-mariadb-103-no-innodb-buffer-pool-in-coredumps/</guid><description>MariaDB 10.3 is now generally available (10.3.7 was released GA on 2018-05-25). The article What&amp;rsquo;s New in MariaDB Server 10.3 by the MariaDB Corporation lists three key improvements in 10.3: temporal data processing, Oracle compatibility features, and purpose-built storage engines. Even if I am excited about MyRocks and curious on Spider, I am also very interested in less flashy but still very important changes that make running the database in production easier.</description></item></channel></rss>