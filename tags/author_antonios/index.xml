<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>author_antonios on Percona Community</title><link>https://percona.community/tags/author_antonios/</link><description>Recent content in author_antonios on Percona Community</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© Percona Community. MySQL, InnoDB, MariaDB and MongoDB are trademarks of their respective owners.</copyright><lastBuildDate>Wed, 18 Sep 2019 15:22:25 +0000</lastBuildDate><atom:link href="https://percona.community/tags/author_antonios/index.xml" rel="self" type="application/rss+xml"/><item><title>Percona Live Europe '19: MongoDB 4.2</title><link>https://percona.community/blog/2019-09-18-percona-live-europe-19-mongodb-4-2/</link><pubDate>Wed, 18 Sep 2019 15:22:25 +0000</pubDate><guid>https://percona.community/blog/2019-09-18-percona-live-europe-19-mongodb-4-2/</guid><description>It&amp;rsquo;s all about MongoDB® 4.2 this time. MongoDB 4.2 released like a month ago (still newborn) and I am going to cover what&amp;rsquo;s new in three different areas: sharding, indexing, and the aggregation framework. I can promise you this, there are a lot of new features and improvements in MongoDB 4.2 and I am thrilled to present those to you. Join me at Percona Live Europe, and discover how distributed transactions, wildcard indexes and materialized views (plus many other new features) actually work and fit on your workload.</description></item><item><title>The Concept of Materialized Views in MongoDB Sharded Clusters</title><link>https://percona.community/blog/2019-07-16-concept-materialized-views-mongodb-sharded-clusters/</link><pubDate>Tue, 16 Jul 2019 10:14:41 +0000</pubDate><guid>https://percona.community/blog/2019-07-16-concept-materialized-views-mongodb-sharded-clusters/</guid><description>In one of my past blogs I explained the contribution of MongoDB® views in organization security. In this blog, I will take it one step further and I will try to approach the concept of a materialized view in MongoDB. In computing, a materialized view is a database object that contains the results of a query (definition taken from Wikipedia). If you are already familiar with MongoDB views (or you read my blog), you are now probably wondering why I am calling the MongoDB views materialized while it&amp;rsquo;s well known that they are computed on the fly?</description></item><item><title>Percona Live Europe Tutorial: Elasticsearch 101</title><link>https://percona.community/blog/2018-10-03-percona-live-tutorial-elasticsearch-101/</link><pubDate>Wed, 03 Oct 2018 07:17:53 +0000</pubDate><guid>https://percona.community/blog/2018-10-03-percona-live-tutorial-elasticsearch-101/</guid><description>For Percona Live Europe, I&amp;rsquo;ll be presenting the tutorial Elasticsearch 101 alongside my colleagues and fellow presenters from ObjectRocket Alex Cercel, DBA, and Mihai Aldoiu, Data Engineer. Here&amp;rsquo;s a brief overview of our tutorial.
Elasticsearch® is well known as a highly scalable search engine that stores data in a structure optimized for language based searches but its capabilities and use cases don’t stop there. In this tutorial, we’ll give you a hands-on introduction to Elasticsearch and give you a glimpse at some of the fundamental concepts.</description></item></channel></rss>